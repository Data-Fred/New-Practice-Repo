<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' inline='true' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FP_Player_Data' name='textscan.0davpwm0wqogze1du2n1e1cxmv0j'>
            <connection class='textscan' directory='//gbrdcpfs03/Profiles$/fpett/Redirection/My Documents/Data Fellowship Tableau/FPL Project' filename='FP_Player_Data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='FPL_Price_Data' name='textscan.18qr98r1seg33m17d76kz0lelff3'>
            <connection class='textscan' directory='//gbrdcpfs03/Profiles$/fpett/Redirection/My Documents/Data Fellowship Tableau/FPL Project' filename='FPL_Price_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FPL_Price_Data.csv].[Player]' />
              <expression op='[FP_Player_Data.csv].[Surname]' />
            </expression>
          </clause>
          <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FPL_Price_Data.csv' table='[FPL_Price_Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Pos' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Team' ordinal='2' />
              <column datatype='integer' name='Points' ordinal='3' />
              <column datatype='real' name='Cost' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FP_Player_Data.csv' table='[FP_Player_Data#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='No.' ordinal='0' />
              <column datatype='integer' name='player_id' ordinal='1' />
              <column datatype='string' name='Firstname' ordinal='2' />
              <column datatype='string' name='Surname' ordinal='3' />
              <column datatype='string' name='player_name' ordinal='4' />
              <column datatype='integer' name='games' ordinal='5' />
              <column datatype='integer' name='time' ordinal='6' />
              <column datatype='integer' name='goals' ordinal='7' />
              <column datatype='real' name='xG' ordinal='8' />
              <column datatype='integer' name='assists' ordinal='9' />
              <column datatype='real' name='xA' ordinal='10' />
              <column datatype='integer' name='shots' ordinal='11' />
              <column datatype='integer' name='key_passes' ordinal='12' />
              <column datatype='integer' name='yellow_cards' ordinal='13' />
              <column datatype='integer' name='red_cards' ordinal='14' />
              <column datatype='string' name='position' ordinal='15' />
              <column datatype='string' name='team_name' ordinal='16' />
              <column datatype='integer' name='npg' ordinal='17' />
              <column datatype='real' name='npxG' ordinal='18' />
              <column datatype='real' name='xGChain' ordinal='19' />
              <column datatype='real' name='xGBuildup' ordinal='20' />
              <column datatype='integer' name='year' ordinal='21' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[FPL_Price_Data.csv].[Player]' />
              <expression op='[FP_Player_Data.csv].[Surname]' />
            </expression>
          </clause>
          <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FPL_Price_Data.csv' table='[FPL_Price_Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Pos' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Team' ordinal='2' />
              <column datatype='integer' name='Points' ordinal='3' />
              <column datatype='real' name='Cost' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FP_Player_Data.csv' table='[FP_Player_Data#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='No.' ordinal='0' />
              <column datatype='integer' name='player_id' ordinal='1' />
              <column datatype='string' name='Firstname' ordinal='2' />
              <column datatype='string' name='Surname' ordinal='3' />
              <column datatype='string' name='player_name' ordinal='4' />
              <column datatype='integer' name='games' ordinal='5' />
              <column datatype='integer' name='time' ordinal='6' />
              <column datatype='integer' name='goals' ordinal='7' />
              <column datatype='real' name='xG' ordinal='8' />
              <column datatype='integer' name='assists' ordinal='9' />
              <column datatype='real' name='xA' ordinal='10' />
              <column datatype='integer' name='shots' ordinal='11' />
              <column datatype='integer' name='key_passes' ordinal='12' />
              <column datatype='integer' name='yellow_cards' ordinal='13' />
              <column datatype='integer' name='red_cards' ordinal='14' />
              <column datatype='string' name='position' ordinal='15' />
              <column datatype='string' name='team_name' ordinal='16' />
              <column datatype='integer' name='npg' ordinal='17' />
              <column datatype='real' name='npxG' ordinal='18' />
              <column datatype='real' name='xGChain' ordinal='19' />
              <column datatype='real' name='xGBuildup' ordinal='20' />
              <column datatype='integer' name='year' ordinal='21' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pos]</local-name>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias>Pos</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Points]</local-name>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias>Points</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost]</local-name>
            <parent-name>[FPL_Price_Data.csv]</parent-name>
            <remote-alias>Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No.]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>No.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[player_id]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>player_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Firstname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Firstname]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>Firstname</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Surname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Surname]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>Surname</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_name]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>player_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>games</remote-name>
            <remote-type>20</remote-type>
            <local-name>[games]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>games</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[goals]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>goals</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xG]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>xG</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>assists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[assists]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>assists</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xA]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>xA</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shots</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shots]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>shots</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key_passes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[key_passes]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>key_passes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yellow_cards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yellow_cards]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>yellow_cards</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>red_cards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[red_cards]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>red_cards</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[position]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>position</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_name]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>npg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[npg]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>npg</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>npxG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[npxG]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>npxG</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xGChain</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xGChain]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>xGChain</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xGBuildup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[xGBuildup]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>xGBuildup</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[FP_Player_Data.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([year])' />
      </column>
      <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[xA]+[xG]' />
      </column>
      <column caption='Goals and Assists' datatype='integer' name='[Calculation_1659295051524427778]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[assists]+[goals]' />
      </column>
      <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
      </column>
      <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
      </column>
      <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
      </column>
      <column caption='Points_FP' datatype='real' name='[Calculation_1659295051540295686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Points])/[Calculation_1659295051524050944]' />
      </column>
      <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
      </column>
      <column caption='Ave Exp Goals &amp; Assists' datatype='real' name='[Calculation_1659295051556261898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1659295051524292609])/[Calculation_1659295051524050944]' />
      </column>
      <column datatype='string' name='[Player (clusters)]' parent-model='[AnalyticModel:{b23b9ea4-2b24-417a-bd5e-a7ed63ba00ca}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Player]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>&quot;Alexander-Arnold&quot;</value>
            <value>&quot;Bednarek&quot;</value>
            <value>&quot;Chilwell&quot;</value>
            <value>&quot;Coady&quot;</value>
            <value>&quot;Cresswell&quot;</value>
            <value>&quot;Digne&quot;</value>
            <value>&quot;Dunk&quot;</value>
            <value>&quot;Holding&quot;</value>
            <value>&quot;Keane&quot;</value>
            <value>&quot;Lowton&quot;</value>
            <value>&quot;Maguire&quot;</value>
            <value>&quot;Mee&quot;</value>
            <value>&quot;Ogbonna&quot;</value>
            <value>&quot;Robertson&quot;</value>
            <value>&quot;Shaw&quot;</value>
            <value>&quot;Son&quot;</value>
            <value>&quot;Stones&quot;</value>
            <value>&quot;Targett&quot;</value>
            <value>&quot;Tarkowski&quot;</value>
            <value>&quot;Tielemans&quot;</value>
            <value>&quot;Walker-Peters&quot;</value>
            <value>&quot;Wan-Bissaka&quot;</value>
            <value>&quot;Ward-Prowse&quot;</value>
            <value>&quot;Westwood&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FPL_Price_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1]' role='measure' type='quantitative' />
      <column caption='Assists' datatype='integer' name='[assists]' role='measure' type='quantitative' />
      <column caption='Games' datatype='integer' name='[games]' role='measure' type='quantitative' />
      <column caption='Goals' datatype='integer' name='[goals]' role='measure' type='quantitative' />
      <column caption='Key Passes' datatype='integer' name='[key_passes]' role='dimension' type='ordinal' />
      <column caption='Npg' datatype='integer' name='[npg]' role='measure' type='quantitative' />
      <column caption='Npx G' datatype='real' name='[npxG]' role='measure' type='quantitative' />
      <column caption='Player Id' datatype='integer' name='[player_id]' role='dimension' type='ordinal' />
      <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
      <column caption='Position' datatype='string' name='[position]' role='dimension' type='nominal' />
      <column caption='Red Cards' datatype='integer' name='[red_cards]' role='measure' type='quantitative' />
      <column caption='Shots' datatype='integer' name='[shots]' role='measure' type='quantitative' />
      <column caption='Team Name' datatype='string' name='[team_name]' role='dimension' type='nominal' />
      <column caption='Time' datatype='integer' name='[time]' role='measure' type='quantitative' />
      <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
      <column caption='X G Buildup' datatype='real' name='[xGBuildup]' role='measure' type='quantitative' />
      <column caption='X G Chain' datatype='real' name='[xGChain]' role='measure' type='quantitative' />
      <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Yellow Cards' datatype='integer' name='[yellow_cards]' role='measure' type='quantitative' />
      <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1659295051524292609]' derivation='Sum' name='[sum:Calculation_1659295051524292609:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1659295051527172100]' derivation='Sum' name='[sum:Calculation_1659295051527172100:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1659295051524050944]' derivation='User' name='[usr:Calculation_1659295051524050944:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pos:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DEF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MID&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[Player (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{a62fe6ef-e18b-4ff5-88a8-b79a013fd829}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051527172100:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{b23b9ea4-2b24-417a-bd5e-a7ed63ba00ca}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051524292609:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
          </lod-fields>
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[Player (clusters)]' />
        </result-fields>
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{cfa066d9-be2f-4451-a2c6-7e15b58c042a}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051524292609:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
            <field name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FPL_Price_Data.csv' id='FPL_Price_Data.csv_AC189CDD6C7E43BB93A12B942BAD80A1'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[FPL_Price_Data.csv].[Player]' />
                    <expression op='[FP_Player_Data.csv].[Surname]' />
                  </expression>
                </clause>
                <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FPL_Price_Data.csv' table='[FPL_Price_Data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                    <column datatype='string' name='Pos' ordinal='0' />
                    <column datatype='string' name='Player' ordinal='1' />
                    <column datatype='string' name='Team' ordinal='2' />
                    <column datatype='integer' name='Points' ordinal='3' />
                    <column datatype='real' name='Cost' ordinal='4' />
                  </columns>
                </relation>
                <relation connection='textscan.18qr98r1seg33m17d76kz0lelff3' name='FP_Player_Data.csv' table='[FP_Player_Data#csv]' type='table'>
                  <columns character-set='windows-1252' header='yes' locale='en_GB' separator=','>
                    <column datatype='integer' name='No.' ordinal='0' />
                    <column datatype='integer' name='player_id' ordinal='1' />
                    <column datatype='string' name='Firstname' ordinal='2' />
                    <column datatype='string' name='Surname' ordinal='3' />
                    <column datatype='string' name='player_name' ordinal='4' />
                    <column datatype='integer' name='games' ordinal='5' />
                    <column datatype='integer' name='time' ordinal='6' />
                    <column datatype='integer' name='goals' ordinal='7' />
                    <column datatype='real' name='xG' ordinal='8' />
                    <column datatype='integer' name='assists' ordinal='9' />
                    <column datatype='real' name='xA' ordinal='10' />
                    <column datatype='integer' name='shots' ordinal='11' />
                    <column datatype='integer' name='key_passes' ordinal='12' />
                    <column datatype='integer' name='yellow_cards' ordinal='13' />
                    <column datatype='integer' name='red_cards' ordinal='14' />
                    <column datatype='string' name='position' ordinal='15' />
                    <column datatype='string' name='team_name' ordinal='16' />
                    <column datatype='integer' name='npg' ordinal='17' />
                    <column datatype='real' name='npxG' ordinal='18' />
                    <column datatype='real' name='xGChain' ordinal='19' />
                    <column datatype='real' name='xGBuildup' ordinal='20' />
                    <column datatype='integer' name='year' ordinal='21' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='E Goals and Assists'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524292609]' derivation='Sum' name='[sum:Calculation_1659295051524292609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524050944]' derivation='User' name='[usr:Calculation_1659295051524050944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot; V Good&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051524292609:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{DFC76A32-D046-44CC-B462-8CF92A4D0B65}' />
    </worksheet>
    <worksheet name='E Goals and Assists (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{cfa066d9-be2f-4451-a2c6-7e15b58c042a}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column caption='Ave Exp Goals &amp; Assists' datatype='real' name='[Calculation_1659295051556261898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051524292609])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524292609]' derivation='Sum' name='[sum:Calculation_1659295051524292609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524050944]' derivation='User' name='[usr:Calculation_1659295051524050944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051556261898]' derivation='User' name='[usr:Calculation_1659295051556261898:qk]' pivot='key' type='quantitative' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AdhocCluster:2:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='0' />
                <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='2' />
                <groupfilter function='member' level='[none:AdhocCluster:2:ok]' member='3' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pos:nk]' member='&quot;DEF&quot;' />
              <groupfilter function='member' level='[none:Pos:nk]' member='&quot;MID&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot; V Good&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]' />
              <text column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{7770C826-B967-4D6D-93EF-EC82A998F7AA}' />
    </worksheet>
    <worksheet name='Expected Goals/Assists'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524292609]' derivation='Sum' name='[sum:Calculation_1659295051524292609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' included-values='all' />
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' num-steps='3' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051524292609:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{06D36063-33EF-4AD8-9EB6-5294CC3B26F3}' />
    </worksheet>
    <worksheet name='Expected Goals/Assists (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524292609]' derivation='Sum' name='[sum:Calculation_1659295051524292609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' included-values='all' />
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' num-steps='3' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051524292609:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{1FA3AB19-DBD8-4B4B-997E-5B38942CB250}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Points_FP' datatype='real' name='[Calculation_1659295051540295686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Points])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051540295686]' derivation='User' name='[usr:Calculation_1659295051540295686:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051540295686:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051540295686:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</rows>
        <cols>([federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051540295686:qk] + [federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk])</cols>
      </table>
      <simple-id uuid='{2537366D-CF94-44B7-90F3-6B1C41CF8246}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column caption='Ave Exp Goals &amp; Assists' datatype='real' name='[Calculation_1659295051556261898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051524292609])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524050944]' derivation='User' name='[usr:Calculation_1659295051524050944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051556261898]' derivation='User' name='[usr:Calculation_1659295051556261898:qk]' pivot='key' type='quantitative' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot; V Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot;Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
            </encodings>
            <reference-line axis-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' z-order='1' />
            <reference-line axis-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='average' id='refline1' label-type='automatic' percentage-bands='true' probability='95' scope='per-table' symmetric='false' value-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]' z-order='2'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]</cols>
      </table>
      <simple-id uuid='{32A30E66-CE0C-43FD-94EC-ADE4B7191381}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Expected Goals and Assists' datatype='real' name='[Calculation_1659295051524292609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[xA]+[xG]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column caption='Ave Exp Goals &amp; Assists' datatype='real' name='[Calculation_1659295051556261898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051524292609])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524050944]' derivation='User' name='[usr:Calculation_1659295051524050944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051556261898]' derivation='User' name='[usr:Calculation_1659295051556261898:qk]' pivot='key' type='quantitative' />
            <column caption='X A' datatype='real' name='[xA]' role='measure' type='quantitative' />
            <column caption='X G' datatype='real' name='[xG]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot; V Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot;Good&quot;' />
              <groupfilter function='member' level='[usr:Calculation_1659295051541540871:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524050944:qk]' />
            </encodings>
            <reference-line axis-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' z-order='1' />
            <reference-line axis-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='average' id='refline1' label-type='automatic' percentage-bands='true' probability='95' scope='per-table' symmetric='false' value-column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]' z-order='2'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051556261898:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]</cols>
      </table>
      <simple-id uuid='{F37A5587-77EC-4FF2-BF0E-33CF16C62829}' />
    </worksheet>
    <worksheet name='Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051531780101]' derivation='User' name='[usr:Calculation_1659295051531780101:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051531780101:qk]</cols>
      </table>
      <simple-id uuid='{627B2B66-C627-4181-A505-BFC87A989626}' />
    </worksheet>
    <worksheet name='Value Buckets'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='Count' name='[cnt:Player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[cnt:Player:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</cols>
      </table>
      <simple-id uuid='{46EDED15-8670-4897-BA0E-368F1C6F458F}' />
    </worksheet>
    <worksheet name='Value by Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column caption='Value_FP' datatype='real' name='[Calculation_1659295051531780101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1659295051527172100])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value_Category' datatype='string' name='[Calculation_1659295051541540871]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if[Calculation_1659295051531780101] &lt; 10 then &apos;Poor&apos;&#13;&#10;elseif [Calculation_1659295051531780101] &lt; 15 then &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_1659295051531780101] &lt; 20 then &apos;Good&apos;&#13;&#10;else &apos; V Good&apos;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051527172100]' derivation='Sum' name='[sum:Calculation_1659295051527172100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051541540871]' derivation='User' name='[usr:Calculation_1659295051541540871:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051527172100:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{2CAAEFCF-8413-4F1E-90C1-44DC6E4CBFAA}' />
    </worksheet>
    <worksheet name='Value by Price (POS)'>
      <table>
        <view>
          <datasources>
            <datasource caption='FPL_Price_Data.csv+ (Multiple Connections) Extract' name='federated.161fsbq15aui6z1g6ktad1uz0cx1' />
          </datasources>
          <datasource-dependencies datasource='federated.161fsbq15aui6z1g6ktad1uz0cx1'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{a62fe6ef-e18b-4ff5-88a8-b79a013fd829}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Count Player' datatype='integer' name='[Calculation_1659295051524050944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([year])' />
            </column>
            <column caption='Price' datatype='real' name='[Calculation_1659295051524730883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Cost])/[Calculation_1659295051524050944]' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1659295051527172100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if[Pos]=&apos;DEF&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;MID&apos; then [Points]/([Cost])&#13;&#10;ELSEIF [Pos]=&apos;FW&apos; then [Points]/([Cost])&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1659295051527172100]' derivation='Sum' name='[sum:Calculation_1659295051527172100:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1659295051524730883]' derivation='User' name='[usr:Calculation_1659295051524730883:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:1:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AdhocCluster:1:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='0' />
                <groupfilter function='member' level='[none:AdhocCluster:1:ok]' member='2' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:1:ok]</column>
            <column>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' />
              <lod column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[sum:Calculation_1659295051527172100:qk]</rows>
        <cols>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051524730883:qk]</cols>
      </table>
      <simple-id uuid='{520D44AB-1384-454D-AE2B-38D6761665F1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FPL PLayer Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='764' maxwidth='1016' minheight='764' minwidth='1016' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97906' id='1' param='vert' removable='false' w='98426' x='787' y='1047'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4319' id='3' w='98426' x='787' y='1047' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='13220' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='5366' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='80367' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='18586'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Top Players by Value' captured-sheet='Value' id='1' />
                  <story-point caption='Count of players falling into each bucket' captured-sheet='Value Buckets' id='2' />
                  <story-point caption='Plotting Value against price' captured-sheet='Value by Price' id='3' />
                  <story-point caption='Defenders - Value against Price' captured-sheet='Value by Price (POS)' id='4'>
                    <capturedDeltas>
                      <worksheet name='Value by Price (POS)'>
                        <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]'>
                          <groupfilter function='member' level='[none:Pos:nk]' member='&quot;DEF&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Plotting Expected Goals against Value' captured-sheet='Sheet 8' id='5'>
                    <capturedDeltas>
                      <worksheet name='Sheet 8'>
                        <filter class='categorical' column='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]'>
                          <groupfilter function='level-members' level='[usr:Calculation_1659295051541540871:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Expected Goals and Assists for V Good Cat players' captured-sheet='E Goals and Assists' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{664D8716-7592-499A-8F92-5F69C8892EE8}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Expected Goals/Assists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1311B0A8-7F26-4606-9D27-702AB6BE2AA9}' />
    </window>
    <window class='worksheet' name='Expected Goals/Assists (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D415A38-5492-4E8D-98C0-995CAAC3AC0A}' />
    </window>
    <window class='worksheet' name='E Goals and Assists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B65DB187-035B-4393-8598-2A77FB43B8C8}' />
    </window>
    <window class='worksheet' maximized='true' name='E Goals and Assists (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:2:ok]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CFADB03-E191-4CEB-981D-B0A0796120E8}' />
    </window>
    <window class='worksheet' name='Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC0FAF2C-303C-462B-8816-7A14EC493439}' />
    </window>
    <window class='worksheet' name='Value Buckets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC2B20E8-365A-475B-9064-C39792E65C6C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EE4D5C3-92A8-4B28-ADB8-EABDFE9DDFF6}' />
    </window>
    <window class='worksheet' name='Value by Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F6B2D53-CFBB-452C-9FEB-495013D038E9}' />
    </window>
    <window class='worksheet' name='Value by Price (POS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:AdhocCluster:1:ok]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0FA99CA-0805-4B10-BCFE-BB92E5252077}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='filter' />
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='2' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82A08ED8-3BD5-473E-90D2-98688B96A2E1}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]' type='filter' />
            <card param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='2' param='[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Player:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[none:Pos:nk]</field>
            <field>[federated.161fsbq15aui6z1g6ktad1uz0cx1].[usr:Calculation_1659295051541540871:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0143DF1-2F0F-4B77-B717-D008369C88BF}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{CC4384CB-A790-4E7F-854B-1152081CF154}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='E Goals and Assists' width='192'>
      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
      lVZbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='E Goals and Assists (2)' width='192'>
      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
      hnHSm6NtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Expected Goals/Assists' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Expected Goals/Assists (2)' width='192'>
      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
      ULGt5tV9tncAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWwceX7fP3V2d/V9N88mJYqiNOfuzHpv72a9cTYJAuTBCBAfSGAkgPOW
      lwDOAcOPOYAgL0EeAjhONi8BgiR2nDW89i5ib2zPuTPSjKSRREmkSPHu++7qqn8eNJodaXio
      ON3NIvn/PJHd9e36dZPfrvr96le/vyKEEEgk5xT1pAOQSE4SaQDJuUYaQHKukQaQnGukASTn
      GmkAyblGf/JDs9nEcZyTjEUiGTuKn64DbP/k/xEslTxpXNdFVb0dyKTmeBrhuigeNQBCCBRF
      8bY9gAcNHOM9CfGzI8Dnod0oc+/BJheXlrBM7cjtW+UyeipF4JnHO++8S+/NN4cRkkTyXAzF
      AH27y2DgsnHvJjfub7K0MIuKQrPVJl9I88Yb7/PqK1cp79XITmfYWdkilDRZeVhlIh0gO32Z
      2Yn0MEKRSDwxFANoRpDLS0tUdh+yuHCBaCxKNKAjCgY72+vMTk3hagEuzU2z22thmAHMoMWl
      iwlCWp9arQrSAJITwFc5wMbv/T7m6qonjdfzS6kZrwYBAu85ACheUwDv8QmfGaBWqxGPxz1p
      BoMBuu7tQCY1x9domub5n9l1XTTt6NzwCY7joCiK5yTd63tyXXc4p0DPw2AwQLguumEc+AH2
      /u+/pLH6Rx5f+fG3hdT4VTNOvMc3NgNsbqzR7bmk4iF6BDGcFn0lhEkXNZQkHQ+D64DTH1dI
      Esn4rgT3Oi1soVCtVLi3vEyrO8C169z+aJnd3d1xhSGRPMXYjgBTsxcRA5t6s858PEc6HgEE
      pqohArFxhSGRPIWvkuDq5n2iAW/ncI7jeEqwpOb4GtdxUDUVT+fZQuAKF1V9/n0J1wVF8Vxx
      8vyehnUleFj0ljdQymVPmuNcnpeaz6FRFG8tCkI8Lk962Nex9sPh7ynyC99Bi0SeemxsVaCt
      9RWqbZfFxQuowPbODvlcDrApl7ukUlFAtkJIRof1c1/6jAFgTDmAEAIBrN6+xvJOnwtTaTbu
      3cSNZhHNNpWJKS4WJ8cRikTyFGMxgKqq2J0WBDSSMQtT19BCcQKGSnp+AbDHEYZE8hnGYoD8
      VJH81NOPzcwWP7OdeWEe0+t5qXBRFKkZn0bBSxIsHvdCeG+FUEDxeFHrsPekBoP7Pu6rKpBs
      hfC/RrZCfE7azTqOYhANhz7zXOU/f5/a22+POyTJGSb/W/+CwKVLBz4/dgPcuX2bwuwFOrU9
      VCtGt1ommMiQSUTBccCW+YBkiBxxgjP2m+LnirPsbG5QbtmUtlexhUmnUR93GBIJcAJHgE6n
      TW5yBrVfRwkVCQeCKLjjDkMiAXyWBJcfPiTq0zYAqQHHcdE0r5Wjx9UZLwmt+/GV4GG0QmjZ
      LKppHrgfX7VCUL2J23vkTeO6uF4nFUjN59B4K4M+aYU4bF8KCuaXfv2T349bBVKOUdkaugG2
      1lfZq9SYW3yRSODpN1DZ3aSnhChkEp96VFAuV0mlkgzu/Zj+yg+GHZLE7yjqUwYYJ0M3QKfT
      wbF71Mvb/Pjtn7J0dYlGtYyqBnDoELVibD1aJRSy0HWdbquBYkZIpZLDDkUiOZKhG0DXdVRD
      p1FvMjWZxdVDzBdncQfQ1iDKgNXNPdACzM1kuXGrjnXAOZpEMmqGboCZ+QVmjtgmmftZX8TL
      L7/yyc9q/iq66a0i5OeJCFIDIBBHtUJ4bMkYJr6qAslWCP9rZCuERxzbRtENnIGNYRhPPfds
      wL0//Vc0VrxOhZCcNoJ/899gXPzOSYcBjOFC2KBTZq8fot+oIJwe2cIMzUYV01BYebTD0qVF
      FFwsywJnAE5v1CFJThrXPxc+R37yZUZzlFdvYsWi1Os1bn9wg76qUqm2yCTjbD16QKnSGHUY
      Esm+jPwIoCgKU8UF4okYrVqaZDyBFY/REDYdEcBp1MjM50YdhkSyL75Kgqub94h6rIj6u3Xg
      bGmOs6bAfjo1WkAxw4fGdmaSYC/07m2iepwK4boCVfW6kILUHFfzuEfn4G3UWJzIt7/1ye9C
      CPBYBRonQzVAt1bi9tojJqYukEv+7A78arlMLJWidkQrROdtORXitGPMFZ8ygN8ZqgEG3S4D
      BO1mgx/95Z8wtfACm1sV5iZi3F9ZR9AhIlshJD5iqFUgVQtQyOUI6Dbx/BSKq2OKLmokyfxU
      nuz0HLnUx2MQNZO5mQKOEJiyFUJyQvgqCd74X7+HueJtgQxXuKgeL6VLzfE0zzNJQstlSf7y
      3/2Uxt9Xgn1lANkK4X+NbIXwSKfVoO+qxKJhFGBg27iA+UxbBEDlv3yf+tvveHp9Py8NcZ40
      WirF5L/7tx5f8eQZuQG2t7ZxHZtuL0e93sRSB1RthZl0hGpXYKk2IhAnm4zCwEH0vS+QcZxD
      mNQMVyPs07mwychbIYxAiGQ0RKlUZuPuPVoff4TVapX7y/eoNho0GrIVQnIyjPwIENAFVdtk
      fiqBqWrksjmEC6LXZG4+SkgboAY/O7VXIhkHvkqCy6urciqErzUuqqbunwdoGsbExGcePvdJ
      sCfqtxDdDW8a10UcY7qB1BxDI1zEs2VQVcN87e95ex0fMXQDCKfHXrVDrbxHJpUknEpjKNBu
      t+n1eiQSCVqtFpF9FisYLP+YnpwKcbrQA9IAn0bRTBrVFRr1Fq6qY+ys8WCvS0AZkM5k2C1V
      CQQM9rYeUW070K+Rmr7MbCE17FAkkiMZwSmQAt0OM3NFNvYaIFRi0SiJIBAMYzLAdlwi0QSR
      KLRaKrVqBaQBJCfASHKACy+8CkAmnT5y2wz5T35Wc1fQDcfTvvy/oMRZ0zwzGU777AXN04Sv
      qkCyFcL/mnPfCiGES61aJRpPoqkKtm2jG8aBl8iFcHEc0PWj30zvT/81jVU5FeK0EPmNn6AY
      n13o5DTh2QB7m+u0hY7rlqi1+9Dvki3kURWFZrWEEU7Qb9dZW99g5uIi2YTCzo5CKi7YrrTJ
      pmL0ej0CgQCNZh270yEYz5JJRMCxYdAdxfuUjATfnDwcG88G6NsO6XyB8uZDHjzYZLY4RWVv
      G9tVeLS2Si6bwQ0mmcgXiBguW3t1IMXynY9oiSD0apRrHaLpDIpTR1XiiHoNEvJqsGT8eDbA
      xPQ09+8/IJFMUJwPkMsmMVWXnggQ0kENRonG4ridGm1bYyI7we0bd8lPz1NpdMhkYqTzKgNh
      oCtRVDUIcoEMyQnhqyS4unGPaMBbOP5uHThbGtf5eLrDxwmfmrpwZCXpzCXBo+T6psNey1sZ
      9PHIDW9HEKk5nka4Ll97aZaJdNSTzs8MxQDdVo07yysUZubJpWI4/TrNvkU88umXF7TbXSzr
      4KrBGzfX+fNbO8MISTIiZgsJaYBnGfT7OK6gWd3l0cMV4hGVnbJDNhXiww9vsnjlBYQiKG3t
      kE5GUUIJ6NZQQyG61SaRdJ6Lc5PDCEUi8cRQDKDqBrlsBlV1qdYANDTVAQFTxQtEwkFyhSno
      toklkmzslokYCkK4FKaLwGAYYUgknhmKAaxoAiv6eNjVxOQsABf22e7qy49bJKZnZvd9nQuT
      SYQW8LRvPy8OcRY1yejpvvD1LL6qAslWCP9rzn0rxPMEoWkqA8fF8PgBV77/Xz1PhZCMD/3S
      AoV//s9OOoyhMvxlUje3yKSjbGxWcVybyclJmu0WuhhQ77mkIyaNnoIpOiihOL1aicCTVgh7
      gOjJBTL8irDtkw5h6AzdAHavxcpqhV7vcXm0UW9RXFpkd20FIxCgUe/R6A5A1VHqK5hmGle2
      QkhOiKEbID85Qyho0qjV2SlZpNMZYuEQodkirusy6LUQARXDaaNas4QDQc5CU5XkdOKrJLi8
      ukrEY+Lj59aBs6ZxdZ1AoSCT4FHxYalHqemxFcLHw2TPmiYZDfCtgieJ7znUAGv37pAuXqJZ
      2SWXPXwdr3KlTCr5zH29wuH23QdcXlzYV7Ozu0Mum6VSrpFMJXjjhmyF8DNXZlN869X5kw5j
      qBxsANemLwS7W7vY7T2uv/sm+eISpgaxkMa7Nx5wZWGGWqtPOmqyWWljuTcoD8LkwgrheAor
      FGDQbbO9U2K7tIcherhaELXfRbXi6KLD7tYWihkhmUocGIpEMioONECnWafW6GAONKKmTio7
      QSJm0W40abQG5NNR9FCc6Rg0qmVM0ySgxpgOp4kGdbK5HNtrD3BUhcrOHsWFIt1aDXAobXUQ
      QmDoGi0hCMkFMiQnhK+S4P/+o/e4t93ypBGuQPG42JvUHE8zmY7wq7/4yplKgn1lANkK4X/N
      uW+FcJ0BQtGw7T66pn1mh0+C6LabdAeCeCz63AsxVGUrhC+Z/t3f8dw4d1rwflN8p06pUmNt
      t8dEJoQuHMKJLL1OE9M0uX1/na+8/gpbm1sM7C5dexrNHdCo10jnChg4oGt0mi06jkqQLmoo
      SSoeRshWCMmY8WyAgBXl4bU7TE+n6bs6jXqZza0twrl5zGaFQjbJ+uoDOr0uaAHqe9tEI0Es
      y+LRyl06wgDbJp2O0bEdVh9tkJ6eJRU/W+U1yenAswEU1eDS4gKRkIGthajQozA5gxWN028o
      lNsu07OztNttLMui3W4TDBg8uL/ChaUXadZrIMBQHLS+QnLBhEBsFO9NIjkSXyXB5ZVVIpps
      hfCbxpieRlEUmQSPGvvROt1yxZPGz60Dp12jBINE/+p3Pb3uaWMkBihtb7BZaTE/PUkoEn5q
      Jb7dnR1ClrXvAhmdt96h9+abowhJcgzURFwa4Di44vEN8fdv3yBemODDd95lbmmJ/sAgFlTo
      2R1W7y1jWGHsbgc9lODywv73CUsko2Qky6Rqqobd65LMZEA4pAszxCIh5opFDMNAuC7p/DRx
      y8R2HHq907nGrOT0M5IjQCo3SSr3szk/s9Nzn/yciMz8bEORpNXpkfh4W2OuiOkxJ/f7FIXT
      rFHDlqfXPI34qgokWyH8r5FVoEPotJoIzcQKPn93p23bgIJh6PzOD97jjdt7wwxJ8jn4j//k
      bxELe5vTdNoYmgHcQY+V1XXyhQL1cgkzoGITwG6Wiaay7O3skp8oMOj3MQMBes0qAy1Mo7yJ
      0EJcnJ/FHrh0+3JKnF8Q5+Be7aEZQOAiXEG32aCrqSxfe5+eEcdSHAoDh82dCqoCrVYTYVpU
      Ht7GjRSYzcppEJKTY2gG0PQQC5fmQdHQdY2ZbAZHKOAO0A2T/MQ0waCJK0AIYH4GRygY+s/O
      Da2gQTIaHFZIks+JekY7QD+NTIKlxpNGJsEjpPlHP6S3vOxJ46ey4WnXJH7tVzFnZg5QnE1G
      ZwC3x7vvfshEcZ5UNIhuBlAVBSEE/V4PwzBwBJTLe+SyOTRNw360gXP9g5GFJDkct+XtdtSz
      wOgMoBpkUhG69S1ubqnoSptsbpatlftY6RyNvTUaTpCE0cVRLaZz3k59JJJhMMIjgEO37xBJ
      pAh2dkhmpyjvbJAqTNJuN8kWpkkInVTCwrb756DgJvEjvkqCd956i1C94UnzeLE3j63AUrOv
      xnr9NbTEwfOZZBI8YrRkCvOQP8B+OI6L5vkmGqnZT6MEzvZV3/0YqQHsXpNKwyGkdnCCaRKW
      8ZltnMEAVddRgMYf/B9a8n6AEyP3279FcGnppMMYKyM1QM/usrFeIqKUIQXr93ZIpLMkIkFK
      9Q61agXRaRObnmN+IjvKUCSSfRnxKZBCSBMM1AB2vYIWMNlcW6NsKtihHPNTWWpbVQLmZ48M
      Esk4GKkBwuEkl67GcYWCoij0el0CF016vT6mGUBVFeKxFPbg8YrlihVC9ZgDIAR4vWQvNftq
      FI9Xhs8CvqoCyVYI/2tkFWiENH/4Q3p373nSnLZ2Az9qtGSC9D/6DU/6s8LIDHD9p29z8coL
      vPfTD/jyl17FRWVve5NMfgJNEQgUHMdFwUUoGsGAib2+gXP9+qhCkhyAnjt88ZOzzMgMkEzH
      Wbl7j1AkxvLN99lsKhTiBrV2H7tVRREOm9UuSxem6BLi8vzUqEKRSA5kZAaIxnO4oko+HKHT
      1JmM6BQyyY+fzTDoNTGjPbqdDlZS9gFJTgZfJcGPWyHqnjSu46J6vAoqNU9r1JBF+OtfO1Ij
      k+ARU8tNUyl4Wy7Jj7M0T5tmMhP1pD1LHMsAg3aDvh6gUWsSDpmEI5GnFsEQrsvynZtEUpNk
      klEM47MXulqtFuFw+KnH/udPPpKrRJ4A//RXvsFXXpg+6TBOhGMZQDMEK7fv01cUUtEQpe11
      9HCaemmTaHqSiXSMaq2Oo4cRgw7NWplkNs/mVpXpQoytSodoUKHZ6tBtlDCiWSZzqaN3LJEM
      mWMZQDFiNOrXKeRy2HqQzbs3UMJN5udn6bfKbLkDgiELu9ejqzo0qiWEFmJ7bQUhMiw/LPFC
      MUM3orC9+hA12pcGkJwIx84BvvilL6OpCi4qU8lvoenm46Qqk0ZVVZLxCJoZRFcVJgoTGGaA
      6alJAqbO4iWBaegIIZjJZ9H0x+f9VtAgEfE6FULAc69CJjX7aQx9JCNiTwW+qgLJVgj/a2QV
      aIT84I273N5oetKclnYDP2pCAYPf/JVveNKdNcZqgJsf/JQBQWZmpomEgzguj9siFA3T0Fnb
      qfPeXVkFGhdWQLahj9UA8VQOXXV4+GibuN7hxmqVmbSBmZxh6cL5LMNJTpaxGqDfbtBSLSby
      SdyuQXE6RDKq42jeLn5JJMNirAaYv3TlU79lKDzz/DdfnuWlRW9LJZ22yQt+0gQMX6WAJ4Kv
      PoErqT5R3fakOW2TF/yk0VNyXbbRGEC43F++QyiRI5OMYTxTmrJte9/2iP47v0t75QcjCUmy
      D9/9bcyXfumkozhRRnQEEFSrNaxonL29LcqVPpZh02j3sGJJQqZKt1FDCUZxOw2CiRzThcxo
      QpFIDmFklwBzU7Nk4xbdToNYegIjGCGVThM0FLrdDsFwkoDo0rIFjXptVGFIJIcyoiOAykQ+
      h6oqzM5eAkUD8WzKC5AjY/dQ9Y8nkplhFCvtaU+nbPCCvzS6XIxEtkJIjSeNbIUYIc0f/jG9
      ZTkVYlya2N/464RefcWT7qwxNANc/+lbKMEEVxbncV0wlQ5vvnePRDrFxdkJhKJ+suaUoig4
      AxsXFRUXVB1D17DXH+FcuzaskCRH4Hz55046hBNnaAZI5yZxnD7vvfUXNAnzV15fwHEFqqLw
      4QfX0MMJQoaGqSr0Uek1KggjwN7DB0QmF3jtxcVhhSKRPDdDM0CrXkYLp5mcmqYjAqCZREIG
      ZsAke3ERu11ndbvGhXyUnhNiciYOCIKKIBCXN8NIToaxJ8GdTptAMLTvEpw7b75FyGNJ9LRM
      XvCjxnrxRYzp55/HJJPgIRAKWQc+p6VTmClvRwPHddBUjxMRpAbHdVCj53caxBNGaoC97Ufs
      VrssLl5Ee44vjcb/lgtkjJPUP/wHRH7hOycdxokyUgNUKhV6zT7bO1tUSjWy+Sz9VpNAJEKv
      XkGYFq1yiXC6wMyEbIWQjJ+RGkDTDYJ6h61SHcvtUipVcPttnFaH0sN7xKdmyCUKKE5/lGFI
      JAcyUgNMzxTpD1ysoEmnZ2MFDBzxeLFsMT+Lq2gfd4o+zsOVUBA1FhtlSJJPoZjyRiTZCiE1
      njSyCjRC/vDNZTkVYkya3/zlr/nrj39CjOQzaFd3ubu2TTIcIz6ZQx/Y1HbLJIozmK6LoqoI
      Z4BQNDbXVxBakOLMFA+3a/z0jpwKMQ58dOA/UUZigFK1xdUXX6Syeo/VWzfQYwlCA4W1tTV6
      5V0CsRSlh8so8UnyMQMhnFGEIZEcyUgMMDmR5daND8mk8ywspKl0bQKugm4KOoEZbBcmZ4oo
      oQRhE4Qi59NITgZfJcF/eW2ZSsdbOH6fvOBXzXdfm8Pc577sw5BJ8Ii5krKJGgNPmtOyCIWf
      NEokj+v1FrIzysgNIJwezS50WjUsyyIcDj/zDSJotTqEwxb9d/6TnAoxBsyv/2O0L/79kw7D
      F4z+CKBo7D76iJ0GTGRjVHY3sdUQotfAjKTo1Uv0lSBXL18YeSgSybOM3ACKqlGtNpibzLPb
      VtD6bQZuG0VR6fc3GahBggFvh3yJZFiMIQdQeOkLr6FpGmkXhJNFKBo4NooRwOl30YwnUyEs
      lJC3dujHS257vHB0zjWKIadBPMFXVSDZCuF/jawCjZA/fHOZO7IVYuSa77w2z1euTHrax1ll
      JAYQ7oC33/hL4oV55qYy6LqB67ooisLAcdE1BSGgVCqhKwpWMoVlGjzcrvGubIUYOVfnsicd
      gm8YiQEUVWdqdpZ0JsPbf/ETrGgcJ5AgZgyotQeI1ja2kcRUBZapk9RMrExyFKFIJIcyslOg
      cDiKpipkClOEggFiuVm271+n2XZYmCriGFGUXgMrHKFje7v4JZEMi7Emwa1GDVc1iYZD+z7/
      F9eWqcpWiJFrLs+kKeZjMgkedxIcjh5e4cklwmTT3u5S8mu7gZ81yej+X0DnkdEkwUKwub6C
      EUmTTR58i2O90SD2qdEc/+PPbvHnt2QSPGp+7Rdf5m9/Q07igxEZwLUb9FyLrGVy+9aHJFI5
      dra3yeWzlGotEiGdnmLi9lrsbKwRiueZKngbiy6RDIORLJChaCbteom90g6rK6s8WNlkanqG
      ra0NImGL5Tu32Nktg9Ol1YdGvTqKMCSSIxnJEUDVAixcmgNV5+s/n8Y0TTRNIx5/mU6nR+Eb
      32YgFExdY2D3P2mFCAV0YuGAt535fhUK/2kCpuy9eoJshZAaTxpZBRoh9vX/Rrv0vieNEIL+
      MVoHzqtGn34d8/Vf9/T6Z5mRGqDXqnJrZYdXrixQ213HjUwS1l10TWXgOKAoaAoIRcPQNdy9
      ZZyVPxtlSOcexYycdAi+YqQG2FxbY6/UZOORQbVcQgl2WV6+z8KFIu1mEyNgIfo1gqlZli5M
      jzIUiWRfRmoAK5njq/kce80BaAEilsV8cYZMrkCgAKDQbFoMVDkVQnIy+CoJLt/8EZG+twth
      fm038KtGTRbRi1+TSTA+TIIJzCECc54kruOgeGwdOM8abaro6bXPOmMzwN72OhulNi9duYSi
      8MkkiE9T//0/oCkXyBgpU//h36MlZev5E8ZmgFQmT7O3xc7GQzrCoL79iGhuGs1uYESzTGTl
      H0UyfsZmgHsf3USN5dlYu8teV+XqwgWgx4OVVZRoVxpAciKMzQDT8xfpD2A68xri44WxAVKp
      7CetEEowcIyF2wR4nKJwrjVyItxT+KoKJFsh/K+RVaAR0vzjP6F3774njV8nL/hRk/g7v4Q5
      P+/ptc86QzeAcAd8dPMWgWiK4nQBIQSO42DoOvbAoby1RSCVJB4K4mKzvdmkMJlB11TstXWc
      994bdkiSj3G+99dOOgTfMXwD9NsEExlalSrLt0uoQuHW/VUWFy/ywY0HvP7yErXdXXaaJfpm
      FLfZpd3vsnhxdtihSCRHMnQDqIEoSncDPRgklylgGdBxVcJWhEvzs4TjUUIKqEGdhi1I5adQ
      kCvESE4GXyXBO2+8QahW86TxY7uBXzWh115DzzxekFwmwT5MggNXrhD1WAXy6+QFv2u8JtrH
      1RyH4+7Hq05RFH8Z4Dh4/ZaQmvFqjqM7rgGOE5/vDPDkjOyoD+HTZ25eSodPdM+tEQLxyY8j
      iu1T+3hKrxwy9PwgzWHxfax58vxzaZ7Z7tO/nwWNrwzQKm1xd/kOU/MvMJGyDt+2VuLO7XtY
      qSStapXLr36JiHH4P9qg1+Inb77Pxekse5UmV1/9AkHtcE1tb5OV7RqZWJCt7V0uvPgFkqHD
      71/YWFlmY7tCLJOkWaly+dXXD41t0G/zwZ1VFgpxbj/cIBZNUm9UKC68RDa+/yx/13W49sGH
      vHR1ieXlOwih0ex2yU3MUZzcf8SMM+hz7eYdvvjKi7z/1p+Tzk+xXSoxVVxiMnPwnWK3brzH
      7PwVlm/fZGJqikePHhFPT3KxOHGgZufhh/StS5QfXodgHLVfR7XSvHDgSkAuK8t3aA4UnFaN
      QDRJr1UjFM9x+cAKoWBrfYX1UpPJpMVWtYul9rC1CC9dXTzgy0OwvnKPvZbNTDo4mrEox6Xb
      6bN4dYFeq3vktrphkpmeJWiYXC7maPaOzuWXb39Ev9+lNdCYnUjSs4/WNFotsDus77W4ujBF
      q3t0xUrVdQxdoedoLM5maR0Rmx4Ik03F6XYGXL56kVq5xcLlBXrtzsH70HTyuSyKqmFZcfKJ
      KLOLi7j93oEazQiQy6Sobq6y1+yxu1Vi4epl+q32ofEVChM4gz69/oCt9Q0KxTlU1z5Uky9M
      oOCi6waqqhBNZrEO/YJSCFoWxZkJEukpdDEgXZjCVA7/vM1giPnZIoGgxVxxhlA0RSx4+BdU
      IBRibirP7eVVfxkgVcizfn+LQuHoRLjZbNColonFYqxVHHKRo9/K0suv8eXXv8h0Nka5oxIL
      Hq2ZmJwiELJYujjF/a0WhfjRY1ui0SimFaWYT7Bec8keEVu/02BvdxesMGv3t7n68kU2H26T
      yyUO1LhOn8reLuuPNqk16tiBMLX1NTL5zIGaQa9NeW+XfiDFN7/6ZZZeusLW/TXykwdrwGVn
      a4dKo8NELkWhOEentEsic9iIdcHaoz3q1V2isQixWBxDcQjFDn4/4FIr16jUOqiiRSI3idtp
      EE0dPsq9Xq1QqlSo1yqUy1WCuoJuRQ/pjBLUKlXK9Q5f/+bP+6sMepxeIInk8+CrI4BEMm6k
      ASTnGl9VgSTeuPH+W4hQhhcuX0ABOu0OIevx6PNOt0so+HQF6fo7bxBMTVDZekh+bom5ySw3
      btzg1q1bAHz7298mkzksHzh7SAOcYnardZztKnZ7D0eLYjhtOvUmmhXh/evX+OqXvoAw47y0
      9Lj0ePfOXV75uTRtTO58eI25ye9+8lrf+973iETO39AseQp0iqmVdrj00quUdnbY2digUt2j
      75p0mh0mcmm6zSrXbnz0yQWzzESR+ekCm2urvPaVrwFgmibf/OY3z+U/P/isGYxFHpEAAABE
      SURBVE5Wgbxh2zaGYdDvdnAVDU2FJ7dGDmwbFHAHNrdufYRrhvnCC5fRdZ3BwMEwHh/8+/0+
      qqp6bow7K0gDSM41/x9/IJOMub0CwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      xThl4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8 (2)' width='192'>
      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
      xThl4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Value Buckets' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Value by Price' width='192'>
      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
      DxvAD35DAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Value by Price (POS)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
